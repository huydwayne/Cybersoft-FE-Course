(function(j,q){var C="FD.Common.Metrics";
if(q.nameValue(C+".register")){return
}var x=q.namespace(C);
var A={};
var u={};
var i=null;
var f=true;
var l=null;
var y=false;
var e=null;
var h=false;
var m=null;
q.assign(x,{register:s,initializePage:r,plan:v,disable:function(){e&&e.disable()
},enable:function(){e&&e.enable()
},debug:a});
q.ready(z);
function z(){if(!j._satellite){console.log("[metrics.init] DTM library not loaded.");
f=false
}if(j.jQuery){m=j.jQuery;
m("body").on("click","[data-fd-metrics-click]",B)
}else{console.log("[metrics.init] jQuery library not loaded, document metrics click handling not available")
}}function d(E){var D=q.nameValue("FD."+E+".Metrics");
return(D&&D.provider)?D:null
}function s(F){var D=A[F.app];
if(!D){var E=d(F.app);
if(!E){console.log("[metrics.registerPlan] Metrics provider missing for app "+F.app);
return
}D=A[F.app]={plan:F,provider:E.provider,enabled:f};
q.assign(D,{data:t.bind(D),page:n.bind(D),direct:g.bind(D),enable:function(){D.enabled=f
},disable:function(){D.enabled=false
}});
E.handler=D;
if(!i){i=D
}F.handler=D;
e=D;
console.log("[metrics.registerPlan] Plan registered for app "+F.app,F)
}return D
}function v(E){var D=(E)?A[E]:i;
return D&&D.plan
}function b(D){if(typeof D==="string"){D=JSON.parse(D)
}return D||null
}function k(F,E,D){var G=this;
return F.toString().replace(/{\(([.,a-zA-Z0-9_: \$]*)\)}/gm,function(K,J){var I=J.split(",");
var H=p.call(G,E,I[0],D);
return H!==null?((I[1]||"")+H+(I[2]||"")):""
})
}function p(F,D,E){var H=this;
var G=null;
do{if(F){G=q.nameValue(D,F,"_");
if(typeof(G)!=="undefined"){break
}}G=E.variables[D];
if(G){break
}if(H.provider){G=H.provider(D);
if(typeof(G)!=="undefined"){break
}}G=null
}while(false);
if(G!==null){G=k.call(H,G,F,E)
}return G
}function t(H,G,E){var D={};
var F=H&&H.id&&this.plan.actions[H.id]||H.actionItem;
var I=this;
if(G&&(G.jquery||G instanceof Element)){G=o(G)
}if(F&&F.variables){q.objectForEach(F.variables,function(L,J){if(L===true){L=p.call(I,G,J,H)
}if(L!==null){var K=J.split("_");
if(K.length===2){if(!D[K[0]]){D[K[0]]={}
}D[K[0]][K[1]]=k.call(I,L,G,H)
}else{console.log("[metrics.retrieveData] Invalid variable name "+J)
}}})
}else{console.log("[metrics.retrieveData] Invalid action id "+(H&&H.id))
}w(F,D);
return D
}function r(F){try{var E=d(F&&F.app);
if(E){j.digitaldata=t.call({plan:{action:{}},provider:E.provider},F);
h=true;
console.log("[metrics.initPage] data set ->",j.digitaldata,F)
}else{console.log("[metrics.initPage] app provider not found")
}}catch(D){console.log("[metrics.initPage] uncaught exception",D,F)
}}function n(){try{if(j._satellite&&this.enabled){j._satellite.pageBottom();
console.log("[metrics.firePageBottom] -> page bottom fired")
}else{console.log("** DTM CALL DISABLED ** [metrics.firePageBottom]")
}}catch(D){console.log("[metrics.firePageBottom] uncaught exception",D)
}}function g(I,H){try{var G=b(I);
var D=G&&this.plan.actions[G.id];
if(D&&D.direct){if(c.call(this,G)){if(f&&this.enabled){var F=this.data(G,H);
j.digitaldata=F;
j._satellite.track(D.direct);
console.log("[metrics.fireDirect] -> "+D.direct,q.assign(true,{},H),G)
}else{console.log("** DTM CALL DISABLED ** [metrics.fireDirect] -> "+D.direct,q.assign(true,{},H),G)
}}}else{console.log("[metrics.fireDirect] invalid action",G,D)
}}catch(E){console.log("[metrics.fireDirect] uncaught exception",E,I,H)
}}function c(G){var F=true;
var E=G&&G.id&&this.plan.actions[G.id];
switch(E&&E.filter){case"oncePerPage":F=!u[G.id];
u[G.id]=true;
break;
case"oncePerSession":var D="fd-metrics-trigger-"+G.id;
F=!j.sessionStorage.getItem(D);
j.sessionStorage.setItem(D,true);
break;
case"oncePerNameplate":break
}return F
}function o(F){var E=m&&m(F);
if(!E||E.length===0){return{}
}var G=null;
var D=E.attr("data-fd-metrics-data");
if(D){try{G=JSON.parse(D)
}catch(H){}}return q.assign(true,o(E.parent("[data-fd-metrics-data]")),G||{})
}function B(){try{var G=m&&m(this).attr("data-fd-metrics-click");
if(G){var F=JSON.parse(G);
var E=A[F.app];
if(E){E.direct(F,this)
}else{console.log("[metrics.processMetricsClick] handler not found for "+F.app)
}}}catch(D){console.log("[metrics.processMetricsClick] uncaught exception",D)
}}function a(){if(!l||l.closed){l=j.open("","fdmetricsdebugger","height=500,width=500,resizable=1,scrollbars=1,location=0");
l.document.open();
l.document.write('<html><head><title>Common Metrics Debug Window</title><style>body { font-family: "Lucida Sans Unicode", "Lucida Grande", Sans-Serif; font-size: 0.8em; margin:0; padding: 0; } h1, h2 { margin: 0 0 .3em 0; } div { padding: 0.8em; } dl { margin: 0 1em; } dt { float: left; width: 12em; font-weight: bold; } dd { margin-left: 12em; }</style><script>function addAction(action) { document.getElementsByTagName("body")[0].appendChild(action); window.scrollTo(0, document.body.scrollHeight); }<\/script></head><body></body></html>');
l.document.close()
}l.focus()
}function w(D,E){if(m&&l&&!l.closed){if(D){var F=m("<div></div>").css({backgroundColor:y?"#ccccff":"#eeeeff"}).append(m("<h1></h1>").text("["+(D.direct?"direct":"page")+"] "+(D.name||"")));
E&&q.objectForEach(E,function(J,G){var H=false;
var I=m("<dl></dl>");
J&&q.objectForEach(J,function(L,K){I.append(m("<dt></dt>").text(K)).append(m("<dd></dd>").text(L));
H=true
});
if(H){F.append(m("<h2></h2>").text(G));
F.append(I)
}});
l.addAction(F.get(0));
l.focus();
y=!y
}}else{l=null
}}})(window,FD.Common);